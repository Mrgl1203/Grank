if (isMoudle.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        if (isMoudle.toBoolean()) {
            applicationId "com.gulei.moudle_girls"
        }
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isMoudle.toBoolean()) {
                manifest.srcFile 'src/main/moudle/AndroidManifest.xml'
            } else {
                manifest.srcFile "src/main/AndroidManifest.xml"
                java {
                    exclude "debug/**"
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.ext.aroutercompiler"
    implementation project(':lib_common')
}
